target Python {
    coordination: decentralized
}

reactor Client (STP_offset = {=FOREVER=}) {
    input global_parameters;
    output updated_parameters;
    reaction(startup) {=
        print("Client Startup!")
    =}
    reaction(global_parameters) -> updated_parameters {=
        val = global_parameters.value
        val += 1
        print("client:", val)
        updated_parameters.set(val)
    =}
}

reactor Server (STP_offset = {=FOREVER=}) {
    output global_parameters;
    input updated_parameters
    reaction(startup) -> global_parameters {=
        print("Hello World From Server!")
        val = 1
        global_parameters.set(val)
    =}
    reaction(updated_parameters) -> global_parameters {=
        val = updated_parameters.value
        val += 1
        print("server:", val)
        global_parameters.set(val)
    =}
}

federated reactor (STP_offset = {=FOREVER=}) {
    client = new Client()
    server = new Server()
    server.global_parameters -> client.global_parameters after 0
    client.updated_parameters -> server.updated_parameters
}