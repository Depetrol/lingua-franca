target C {
  timeout: 1 sec,
  tracing: true
}

reactor A {
  input in0: int
  input in1: int
  output out: int

  reaction(in0) {=
    // lf_set(out, in0->value);
    lf_print("%d", in0->value);
  =}

  reaction(in1) -> out {=
    lf_set(out, in1->value);
    lf_print("%d", in1->value);
  =}
}

reactor B {
  input in: int
  output out0: int
  output out1: int

  reaction(startup) -> out0 {=
    lf_set(out0, 43);
  =}

  reaction(startup, in) -> out1 {=
    lf_set(out1, 42);
  =}
}

federated reactor {
  a = new A()
  b = new B()
  a.out -> b.in
  b.out0 -> a.in0
  b.out1 -> a.in1 after 100 msec
}
