target C {
    workers: 100
}

reactor Watcher {
    input x: int
    output d: int  // Produced if the deadline is violated.

    watchdog poodle(10 msec) {=
        instant_t p = lf_time_physical_elapsed() - lf_time_logical_elapsed();
        printf("Watchdog missed! Lag: %lld (too late by %lld nsecs)\n", p, p-500000);
    =}

    reaction(x) -> poodle, d {=
        lf_watchdog_start(poodle, 0);
        printf("Normal reaction.\n");
    =}
}

main reactor {
    logical action a
    w = new Watcher()

    reaction(startup) -> w.x, a {=
        lf_set(w.x, 0);
        lf_schedule(a, 0);
    =}

    reaction(a) -> w.x {=
        lf_set(w.x, 0);
        lf_nanosleep(MSEC(90));
    =}

    reaction(w.d) {= printf("Deadline reactor produced an output.\n"); =}
}
