/** This example demonstrates a very simple use of protocol buffers
 *  within a reactor. It encodes and decodes a very simple protocol
 *  buffer definition in Person.proto. This reactor is heavily
 *  based on the examples at https://github.com/protobuf-c/protobuf-c/wiki/Examples.
 *  This example just packs and unpacks a message.
 *
 *  To run this example first install the protocol buffers compiler
 *  from https://github.com/protocolbuffers/protobuf. It is also
 *  available from homebrew on a Mac via
 *
 *       $ brew install protobuf
 *
 *  Building protobuf from source is slow, so avoid doing that
 *  if possible. Next install the C plugin for protocol buffers from
 *
 *      https://github.com/protobuf-c/protobuf-c
 *
 *  The code generator assumes
 *  that executables are installed within the PATH. On a Mac, this is
 *  typically at /usr/local/bin.
 */

 target C { platform: "Arduino", no-compile: true, threading: false };

 main reactor Blink {
    timer t1(0, 1 sec);
    timer t2(500 msec, 1 sec);
     reaction(startup) {=
         pinMode(LED_BUILTIN, OUTPUT);                   // Free the allocated serialized buffer
     =}

     reaction (t1) {=
        digitalWrite(LED_BUILTIN, HIGH);
        Serial.print("high");
     =}

     reaction (t2) {=
        digitalWrite(LED_BUILTIN, LOW);
        Serial.print("low");
     =}
 }
 