plugins {
  id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
  id 'java-library'
}

sourceSets {
  main {
    java {
       srcDirs = ['src/main/java', 'src-gen']
    }
    kotlin {
       srcDirs = ['src/main/java', 'src-gen']
    }
    resources {
       srcDirs = ['src-gen', '../src/']
       include 'lib/'
       include 'org/lflang/LF.xtextbin'
       include 'org/lflang/parser/antlr/internal/InternalLF.tokens'
    }
  }
}

compileKotlin {
    destinationDir = compileJava.destinationDir
    kotlinOptions {
        jvmTarget = kotlinJvmTarget
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = kotlinJvmTarget
    }
}

repositories {
    mavenCentral()
    // TODO Replace this unofficial maven repository as soon as Klighd is released to maven central in the future.
    maven {
        url "https://rtsys.informatik.uni-kiel.de/~kieler/files/repo/"
    }
}

dependencies {
    implementation "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
    implementation "org.eclipse.xtext:org.eclipse.xtext.xbase.lib:${xtextVersion}"
    implementation "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
    // https://mvnrepository.com/artifact/org.eclipse.platform/org.eclipse.core.resources
    implementation group: 'org.eclipse.platform', name: 'org.eclipse.core.resources', version: "${resourcesVersion}"
    // https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.mwe2.launch
    implementation group: 'org.eclipse.emf', name: 'org.eclipse.emf.mwe2.launch', version: "${mwe2LaunchVersion}"
    // https://mvnrepository.com/artifact/org.eclipse.lsp4j/org.eclipse.lsp4j
    implementation group: 'org.eclipse.lsp4j', name: 'org.eclipse.lsp4j', version: "${lsp4jVersion}"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.4'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.12.4'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'
    implementation ("de.cau.cs.kieler.klighd:de.cau.cs.kieler.klighd.lsp:${klighdVersion}") {
        exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.*'
        exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt'
    }
    implementation ("de.cau.cs.kieler.klighd:de.cau.cs.kieler.klighd.standalone:${klighdVersion}") {
        exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.*'
        exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt'
    }
    implementation group: 'info.picocli', name: 'picocli', version: picocliVersion
}

configurations {
    mwe2 {
        extendsFrom implementation
    }
}

dependencies {
    mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch'
    mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
    mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
}

tasks.register('generateXtextLanguage', JavaExec) {
    main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
    classpath = configurations.mwe2
    inputs.file "src/main/java/org/lflang/GenerateLinguaFranca.mwe2"
    inputs.file "src/main/java/org/lflang/LinguaFranca.xtext"
    outputs.dir "src-gen"
    args += "src/main/java/org/lflang/GenerateLinguaFranca.mwe2"
    args += "-p"
    args += "rootPath=/${projectDir}/.."
}

compileJava.dependsOn(generateXtextLanguage)
compileKotlin.dependsOn(generateXtextLanguage)
processResources.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)