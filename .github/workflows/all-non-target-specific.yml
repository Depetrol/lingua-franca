# Non-target-specific tests to run on PRs that are ready for review.
name: Catch-all

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]

env:
  # 2020.11
  vcpkgGitRef: 0bf3923f9fab4001c00f0f429682a0853b5749e0

concurrency:
  group: all-non-target-specific-${{ github.ref }}-${{ github.event_path }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:

  junit:
    uses: ./.github/workflows/unit-tests.yml
    with:
      all-platforms: ${{ !github.event.pull_request.draft  }}

  # Run the serialization tests
  serialization:
    if: ${{ github.event.pull_request.draft }}
    uses: ./.github/workflows/serialization-tests.yml

  # Test the Gradle build.
  building:
    if: ${{ inputs.all || github.event.pull_request.draft }}
    uses: ./.github/workflows/build.yml

  # Build the tools used for processing execution traces
  tracing:
    if: ${{ inputs.all || github.event.pull_request.draft }}
    uses: ./.github/workflows/build-trace-tools.yml
    with:
      all-platforms: ${{ !github.event.pull_request.draft  }}

  formatting:
    if: ${{ inputs.all || github.event.pull_request.draft }}
    uses: ./.github/workflows/check-format.yml

  # Run tests for the standalone compiler.
  cli:
    if: ${{ inputs.all || github.event.pull_request.draft }}
    uses: ./.github/workflows/cli-tests.yml
    with:
      all-platforms: ${{ !github.event.pull_request.draft  }}

  # Run language server tests.
  lsp:
    if: ${{ inputs.all || github.event.pull_request.draft }}
    uses: ./.github/workflows/lsp-tests.yml
    with:
      all-platforms: ${{ !github.event.pull_request.draft  }}
